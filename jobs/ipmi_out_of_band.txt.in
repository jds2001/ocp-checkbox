plugin: attachment
name: ipmi/in_band/admin/chassis_info
requires: package.name == 'ipmitool'
user: root
command: ipmitool fru -C3
_description:
 Retrieve chassis model and manufacturer information.

plugin: attachment
name: ipmi/out_of_band/admin/chassis_info
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD fru -C3
_description:
 Retrieve chassis model and manufacturer information.

plugin: shell
name: ipmi/out_of_band/admin/check_power_on
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis power status -C3 | grep -q "on"
_description:
 Retrieve Chassis Status information with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/check_power_off
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis power status -C3 | grep -q "off"
_description:
 Retrieve Chassis Status information with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_on
requires: package.name == 'ipmitool'
depends: ipmi/out_of_band/admin/check_power_off
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis power on -C3; retval=$?; sleep 30; exit $retval
_description:
 Power on server via BMC with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_off
requires: package.name == 'ipmitool'
depends: ipmi/out_of_band/admin/check_power_on
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis power off -C3; retval=$?; sleep 30; exit $retval
_description:
 Power off server via BMC with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_reset
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis power reset -C3; retval=$?; sleep 30; exit $retval
_description:
 Power reset server via BMC with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_cycle
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis power cycle -C3; retval=$?; sleep 30; exit $retval
_description:
 Power cycle server via BMC with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_policy_always_on
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis policy always-on -C3
_description:
 Set server power policy to always on via BMC with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_policy_always_off
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis policy always-off -C3
_description:
 Set server power policy to always off via BMC with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/power_policy_previous
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis policy previous -C3
_description:
 Set server power policy to previous via BMC with Admin credentials

plugin: shell
name: ipmi/in_band/admin/chassis_self_test
requires: package.name == 'ipmitool'
user: root
command: ipmitool chassis selftest -C3
_description:
 Run chassis BMC self test with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/chassis_self_test
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis selftest -C3
_description:
 Run chassis BMC self test with Admin credentials

plugin: shell
name: ipmi/in_band/admin/detailed_sensor_readings
requires: package.name == 'ipmitool'
user: root
command: ipmitool sensor -C3
_description:
 Retrieve detailed chassis sensor readings

plugin: shell
name: ipmi/out_of_band/admin/detailed_sensor_readings
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD sensor -C3
_description:
 Retrieve detailed chassis sensor readings

plugin: shell
name: ipmi/in_band/admin/chassis_status
requires: package.name == 'ipmitool'
user: root
command: ipmitool chassis status -C3
_description:
 Retrieve Chassis Status information with Admin credentials

plugin: shell
name: ipmi/out_of_band/admin/chassis_status
requires: package.name == 'ipmitool'
user: root
environ: IPMI_TARGET IPMI_ADMIN IPMI_ADMIN_PASSWORD
command: ipmitool -I lanplus -H $IPMI_TARGET -U $IPMI_ADMIN -P $IPMI_ADMIN_PASSWORD chassis status -C3
_description:
 Retrieve Chassis Status information with Admin credentials

